<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1546914250709" stop="1546914371523">
  <name>test_zhaiwu</name>
  <labels/>
  <test-cases>
    <test-case start="1546914250709" status="failed" stop="1546914314182">
      <name>TestZhaiWu.test_zhaiwu_gl[P20181027200828-\u738b\u4e16\u658c-18784000687-10----\u83e0\u841d\u8d37-\u674e\u658c-13922098626-\u738b\u78ca-18806359392---\u83e0\u841d\u8d37-\u6f58\u661f\u5b87-15722921728-\u5168\u7f51\u8d37-10-\u738b\u91d1\u521a-13356997180-\u674e\u6f8e\u6d01------------0]</name>
      <failure>
        <message>NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/form/div[8]/input"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)
</message>
        <stack-trace>self = &lt;test_zhaiwu.TestZhaiWu object at 0x000000000443AF28&gt;, zw_dz_hktx_name = 'P20181027200828', zw_dz_hktx_phone = '王世斌'
zw_dz_hktx_ddbh = '18784000687', zw_dz_hktx_txcs = '10', zw_dz_txjl_name = '', zw_dz_txjl_phone = '', zw_dh_kh_ddbh = '', zw_dh_kh_name = '菠萝贷'
zw_dh_kh_phone = '李斌', zw_dhcs_yqkhc_name = '13922098626', zw_dhcs_yqkhc_phone = '王磊', zw_dhcs_yqkhc_ddbh = '18806359392', zw_dhcs_yqcs_name = ''
zw_dhcs_yqcs_phone = '', zw_dhcs_csjlgl_name = '菠萝贷', zw_dhcs_csjlgl_phone = '潘星宇', zw_dhcs_wapcgl_pch = '15722921728'
zw_dhcs_wapcgl_jgmc = '全网贷', zw_dhcs_waajzx_name = '10', zw_dhcs_waajzx_phone = '王金刚', zw_dhcs_waajzx_ddbh = '13356997180'
zw_dhcs_waajzx_ajpc = '李澎洁', zw_dhcs_hkmx_name = '', zw_dhcs_hkmx_phone = '', zw_dhcs_hkmx_wapch = '', zw_dhcs_hkmx_ddbh = '', zw_jggl_jgmc = ''
zw_rygl_name = '', zw_rygl_phone = '', zw_rbbb_csyrb_csy = '', zw_rbbb_csygcrb_csy = '', zw_ybbb_csyyjyb_name = '', zw_ybbb_csyyjyb_zl = ''
zw_ybbb_wwjgyb_wwjg = ''

    @pytest.mark.parametrize(
        'zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs, zw_dz_txjl_name, zw_dz_txjl_phone,zw_dh_kh_ddbh,'
        'zw_dh_kh_name, zw_dh_kh_phone,zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone, zw_dhcs_yqkhc_ddbh,zw_dhcs_yqcs_name,'
        'zw_dhcs_yqcs_phone,zw_dhcs_csjlgl_name, zw_dhcs_csjlgl_phone,zw_dhcs_wapcgl_pch, zw_dhcs_wapcgl_jgmc,'
        'zw_dhcs_waajzx_name, zw_dhcs_waajzx_phone, zw_dhcs_waajzx_ddbh, zw_dhcs_waajzx_ajpc,zw_dhcs_hkmx_name,'
        'zw_dhcs_hkmx_phone,zw_dhcs_hkmx_wapch, zw_dhcs_hkmx_ddbh,zw_jggl_jgmc,zw_rygl_name, zw_rygl_phone,'
        'zw_rbbb_csyrb_csy, zw_rbbb_csygcrb_csy, zw_ybbb_csyyjyb_name, zw_ybbb_csyyjyb_zl, zw_ybbb_wwjgyb_wwjg',
        get_data())
    def test_zhaiwu_gl(self, zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs, zw_dz_txjl_name,
                       zw_dz_txjl_phone,
                       zw_dh_kh_ddbh, zw_dh_kh_name, zw_dh_kh_phone, zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone,
                       zw_dhcs_yqkhc_ddbh, zw_dhcs_yqcs_name, zw_dhcs_yqcs_phone, zw_dhcs_csjlgl_name,
                       zw_dhcs_csjlgl_phone, zw_dhcs_wapcgl_pch, zw_dhcs_wapcgl_jgmc, zw_dhcs_waajzx_name,
                       zw_dhcs_waajzx_phone, zw_dhcs_waajzx_ddbh, zw_dhcs_waajzx_ajpc, zw_dhcs_hkmx_name,
                       zw_dhcs_hkmx_phone, zw_dhcs_hkmx_wapch, zw_dhcs_hkmx_ddbh, zw_jggl_jgmc, zw_rygl_name,
                       zw_rygl_phone, zw_rbbb_csyrb_csy, zw_rbbb_csygcrb_csy, zw_ybbb_csyyjyb_name, zw_ybbb_csyyjyb_zl,
                       zw_ybbb_wwjgyb_wwjg):
        # 点击贷中管理
        self.zhaiwu.page_click_dzgl(zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs)
        # 点击提醒记录管理
        self.zhaiwu.page_click_txjlgl(zw_dz_txjl_name, zw_dz_txjl_phone)
        # 点击待还管理
        self.zhaiwu.page_click_dhgl(zw_dh_kh_ddbh, zw_dh_kh_name, zw_dh_kh_phone)
        # 点击贷后催收
&gt;       self.zhaiwu.page_click_dhcs(zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone, zw_dhcs_yqkhc_ddbh)

Scripts\test_zhaiwu.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page\zhaiwuguanli.py:95: in page_click_dhcs
    self.base_click_btn(Page.zw_dhcs_yqkhc_cx)
Base\base.py:31: in base_click_btn
    self.base_find_element(loc).click()
Base\base.py:15: in base_find_element
    return self.driver.find_element(*loc)
c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:978: in find_element
    'value': value})['value']
c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000000000445E748&gt;
response = {'sessionId': '90a49ad040d843b24d2aa596b2ad65df', 'status': 7, 'value': {'message': 'no such element: Unable to locate...r info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)'}}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/form/div[8]/input"}
E         (Session info: chrome=71.0.3578.98)
E         (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)

c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: NoSuchElementException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4760-MainThread"/>
        <label name="host" value="PC-TD-ZHANGQi"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1546914314184" status="failed" stop="1546914371523">
      <name>TestZhaiWu.test_zhaiwu_gl[P20181027200828-\u738b\u4e16\u658c-18784000687-10----\u83e0\u841d\u8d37-\u674e\u658c-13922098626-\u738b\u78ca-18806359392---\u83e0\u841d\u8d37-\u6f58\u661f\u5b87-15722921728-\u5168\u7f51\u8d37-10-\u738b\u91d1\u521a-13356997180-\u674e\u6f8e\u6d01------------1]</name>
      <failure>
        <message>NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/form/div[8]/input"}
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)
</message>
        <stack-trace>self = &lt;test_zhaiwu.TestZhaiWu object at 0x00000000047DF198&gt;, zw_dz_hktx_name = 'P20181027200828', zw_dz_hktx_phone = '王世斌'
zw_dz_hktx_ddbh = '18784000687', zw_dz_hktx_txcs = '10', zw_dz_txjl_name = '', zw_dz_txjl_phone = '', zw_dh_kh_ddbh = '', zw_dh_kh_name = '菠萝贷'
zw_dh_kh_phone = '李斌', zw_dhcs_yqkhc_name = '13922098626', zw_dhcs_yqkhc_phone = '王磊', zw_dhcs_yqkhc_ddbh = '18806359392', zw_dhcs_yqcs_name = ''
zw_dhcs_yqcs_phone = '', zw_dhcs_csjlgl_name = '菠萝贷', zw_dhcs_csjlgl_phone = '潘星宇', zw_dhcs_wapcgl_pch = '15722921728'
zw_dhcs_wapcgl_jgmc = '全网贷', zw_dhcs_waajzx_name = '10', zw_dhcs_waajzx_phone = '王金刚', zw_dhcs_waajzx_ddbh = '13356997180'
zw_dhcs_waajzx_ajpc = '李澎洁', zw_dhcs_hkmx_name = '', zw_dhcs_hkmx_phone = '', zw_dhcs_hkmx_wapch = '', zw_dhcs_hkmx_ddbh = '', zw_jggl_jgmc = ''
zw_rygl_name = '', zw_rygl_phone = '', zw_rbbb_csyrb_csy = '', zw_rbbb_csygcrb_csy = '', zw_ybbb_csyyjyb_name = '', zw_ybbb_csyyjyb_zl = ''
zw_ybbb_wwjgyb_wwjg = ''

    @pytest.mark.parametrize(
        'zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs, zw_dz_txjl_name, zw_dz_txjl_phone,zw_dh_kh_ddbh,'
        'zw_dh_kh_name, zw_dh_kh_phone,zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone, zw_dhcs_yqkhc_ddbh,zw_dhcs_yqcs_name,'
        'zw_dhcs_yqcs_phone,zw_dhcs_csjlgl_name, zw_dhcs_csjlgl_phone,zw_dhcs_wapcgl_pch, zw_dhcs_wapcgl_jgmc,'
        'zw_dhcs_waajzx_name, zw_dhcs_waajzx_phone, zw_dhcs_waajzx_ddbh, zw_dhcs_waajzx_ajpc,zw_dhcs_hkmx_name,'
        'zw_dhcs_hkmx_phone,zw_dhcs_hkmx_wapch, zw_dhcs_hkmx_ddbh,zw_jggl_jgmc,zw_rygl_name, zw_rygl_phone,'
        'zw_rbbb_csyrb_csy, zw_rbbb_csygcrb_csy, zw_ybbb_csyyjyb_name, zw_ybbb_csyyjyb_zl, zw_ybbb_wwjgyb_wwjg',
        get_data())
    def test_zhaiwu_gl(self, zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs, zw_dz_txjl_name,
                       zw_dz_txjl_phone,
                       zw_dh_kh_ddbh, zw_dh_kh_name, zw_dh_kh_phone, zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone,
                       zw_dhcs_yqkhc_ddbh, zw_dhcs_yqcs_name, zw_dhcs_yqcs_phone, zw_dhcs_csjlgl_name,
                       zw_dhcs_csjlgl_phone, zw_dhcs_wapcgl_pch, zw_dhcs_wapcgl_jgmc, zw_dhcs_waajzx_name,
                       zw_dhcs_waajzx_phone, zw_dhcs_waajzx_ddbh, zw_dhcs_waajzx_ajpc, zw_dhcs_hkmx_name,
                       zw_dhcs_hkmx_phone, zw_dhcs_hkmx_wapch, zw_dhcs_hkmx_ddbh, zw_jggl_jgmc, zw_rygl_name,
                       zw_rygl_phone, zw_rbbb_csyrb_csy, zw_rbbb_csygcrb_csy, zw_ybbb_csyyjyb_name, zw_ybbb_csyyjyb_zl,
                       zw_ybbb_wwjgyb_wwjg):
        # 点击贷中管理
        self.zhaiwu.page_click_dzgl(zw_dz_hktx_name, zw_dz_hktx_phone, zw_dz_hktx_ddbh, zw_dz_hktx_txcs)
        # 点击提醒记录管理
        self.zhaiwu.page_click_txjlgl(zw_dz_txjl_name, zw_dz_txjl_phone)
        # 点击待还管理
        self.zhaiwu.page_click_dhgl(zw_dh_kh_ddbh, zw_dh_kh_name, zw_dh_kh_phone)
        # 点击贷后催收
&gt;       self.zhaiwu.page_click_dhcs(zw_dhcs_yqkhc_name, zw_dhcs_yqkhc_phone, zw_dhcs_yqkhc_ddbh)

Scripts\test_zhaiwu.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
Page\zhaiwuguanli.py:95: in page_click_dhcs
    self.base_click_btn(Page.zw_dhcs_yqkhc_cx)
Base\base.py:31: in base_click_btn
    self.base_find_element(loc).click()
Base\base.py:15: in base_find_element
    return self.driver.find_element(*loc)
c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:978: in find_element
    'value': value})['value']
c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000000000445E748&gt;
response = {'sessionId': '90a49ad040d843b24d2aa596b2ad65df', 'status': 7, 'value': {'message': 'no such element: Unable to locate...r info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)'}}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '&lt;anonymous&gt;')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '&lt;anonymous&gt;')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {"method":"xpath","selector":"html/body/div[1]/form/div[8]/input"}
E         (Session info: chrome=71.0.3578.98)
E         (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64)

c:\users\administrator\appdata\local\programs\python\python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: NoSuchElementException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4760-MainThread"/>
        <label name="host" value="PC-TD-ZHANGQi"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
